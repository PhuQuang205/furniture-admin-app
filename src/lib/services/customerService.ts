import api from "@/lib/axios";

// üß© M√¥ t·∫£ 1 kh√°ch h√†ng
export interface CustomerResponse {
	id: number;
	email: string;
	firstName: string;
	lastName: string;
	avatarUrl: string | null;
	gender: "MALE" | "FEMALE" | null;
	phoneNumber: string | null;
	verified: boolean;
	enabled: boolean;
}

// üß© M√¥ t·∫£ response ph√¢n trang
export interface CustomerPageResponse {
	data: CustomerResponse[]; // backend tr·∫£ v·ªÅ m·∫£ng content
	page: number;
	size: number;
	totalElements: number;
	totalPages: number;
}

export const customerService = {
	// üü¢ L·∫•y danh s√°ch kh√°ch h√†ng (ph√¢n trang + t√¨m ki·∫øm + sort)
	async getAllCustomer(
		page = 0,
		size = 10,
		keyword = "",
		sortField = "id",
		sortDir = "asc"
	): Promise<CustomerPageResponse> {
		const params = new URLSearchParams({
			page: String(page),
			size: String(size),
			sortField,
			sortDir,
		});

		if (keyword.trim() !== "") {
			params.append("keyword", keyword.trim());
		}

		const res = await api.get(`/customers?${params.toString()}`);
		return res.data;
	},

	// üü° C·∫≠p nh·∫≠t tr·∫°ng th√°i k√≠ch ho·∫°t c·ªßa kh√°ch h√†ng
	async updateEnableCustomer(id: number, enabled: boolean) {
		return api.patch(`/customers/${id}/enabled`, null, {
			params: { enabled },
		});
	},
};
